[{"/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/index.js":"1","/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/reportWebVitals.js":"2","/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/App.js":"3","/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/DebitCard.js":"4","/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/AmountTransaction.js":"5"},{"size":500,"mtime":1624712311106,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1624712311107,"results":"8","hashOfConfig":"7"},{"size":334,"mtime":1624731511315,"results":"9","hashOfConfig":"7"},{"size":1340,"mtime":1624769126319,"results":"10","hashOfConfig":"7"},{"size":3180,"mtime":1624769840016,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ehq17s",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/index.js",[],["24","25"],"/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/reportWebVitals.js",[],"/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/App.js",[],"/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/DebitCard.js",["26"],"import React, { useState, useEffect } from 'react';\nimport '../css/DebitCard.css';\n\nconst AmountTransactionComponent = React.lazy(() => import('./AmountTransaction'));\n\nexport default function DebitCard(props) {\n  const [accountInfo, setAccountInfo]=useState({});\n  const [balance, updateBalance] = useState(0);\n\n  const getAccountInfo = () => {\n    fetch('./accountDetails.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n    .then(function(response){\n      return response.json();\n    })\n    .then(function(myJson) {\n      setAccountInfo(myJson);\n      updateBalance(parseInt(myJson.balance));\n    });\n  }\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  var handleAmountTransaction = (amount, task) => {\n    switch(task) {\n      case 'add': \n        updateBalance(balance + parseInt(amount));\n        break;\n      case 'withdraw': \n        updateBalance(balance - parseInt(amount));\n        break;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"card-name\">Debit Card</div>\n      <div className=\"card-holder\">{accountInfo.accountHolder}: {accountInfo.id}</div>\n      <div> Available Amount: {balance}</div>\n      {\n        <AmountTransactionComponent balance={balance} handleAmountTransaction={handleAmountTransaction}/>\n      }\n    </>\n  );\n}","/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/AmountTransaction.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":32,"column":5,"nodeType":"33","messageId":"34","endLine":39,"endColumn":6},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]