{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/AmountTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddAmount(props) {\n  _s();\n\n  const [amountToBeAdded, addAmount] = useState(0);\n  const [trasctionType, setTransactionType] = useState('');\n  const [errorMsg, setErrorMessage] = useState('');\n\n  var handleButtonclick = () => {\n    if (!trasctionType) {\n      setErrorMessage('Please select the trasaction mode');\n\n      if (!amountToBeAdded || amountToBeAdded === 0) {\n        setErrorMessage('Please enter the amount;');\n      } else {\n        props.handleAmountAddition(amountToBeAdded, trasctionType);\n      }\n    }\n  };\n\n  var handleValueChange = e => {\n    addAmount(e.target.value);\n  };\n\n  var handleTransactionType = e => {\n    setTransactionType(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select the Action:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"add\",\n        name: \"transactionType\",\n        value: \"add\",\n        onChange: handleTransactionType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"add\",\n        children: \"Add amount \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"withdraw\",\n        name: \"transactionType\",\n        value: \"withdraw\",\n        onChange: handleTransactionType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"withdraw\",\n        children: \"Withdraw amount \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonclick,\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddAmount, \"jqwjZFdjUaFW9hrG7nlt25jyAMk=\");\n\n_c = AddAmount;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAmount\");","map":{"version":3,"sources":["/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/AmountTransaction.js"],"names":["React","useState","useEffect","AddAmount","props","amountToBeAdded","addAmount","trasctionType","setTransactionType","errorMsg","setErrorMessage","handleButtonclick","handleAmountAddition","handleValueChange","e","target","value","handleTransactionType","errorMessage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,eAAD,EAAkBC,SAAlB,IAA+BL,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACM,aAAD,EAAgBC,kBAAhB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,QAAD,EAAWC,eAAX,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,MAAIU,iBAAiB,GAAG,MAAM;AAC5B,QAAG,CAACJ,aAAJ,EAAmB;AACjBG,MAAAA,eAAe,CAAC,mCAAD,CAAf;;AACA,UAAG,CAACL,eAAD,IAAoBA,eAAe,KAAK,CAA3C,EAA8C;AAC5CK,QAAAA,eAAe,CAAC,0BAAD,CAAf;AACD,OAFD,MAEO;AACLN,QAAAA,KAAK,CAACQ,oBAAN,CAA2BP,eAA3B,EAA4CE,aAA5C;AACD;AAEF;AACF,GAVD;;AAYA,MAAIM,iBAAiB,GAAIC,CAAD,IAAO;AAC7BR,IAAAA,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,MAAIC,qBAAqB,GAAIH,CAAD,IAAO;AACjCN,IAAAA,kBAAkB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,wBAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,KAAvB;AAA6B,QAAA,IAAI,EAAC,iBAAlC;AAAoD,QAAA,KAAK,EAAC,KAA1D;AAAgE,QAAA,QAAQ,EAAEC;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,wBAKE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,UAAvB;AAAkC,QAAA,IAAI,EAAC,iBAAvC;AAAyD,QAAA,KAAK,EAAC,UAA/D;AAA0E,QAAA,QAAQ,EAAEA;AAApF;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAEJ;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAYE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEF,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGO,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAmBD;;GA5CuBf,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function AddAmount(props) {\n  const [amountToBeAdded, addAmount] = useState(0);\n  const [trasctionType, setTransactionType] = useState('');\n  const [errorMsg, setErrorMessage] = useState('');\n\n  var handleButtonclick = () => {\n    if(!trasctionType) {\n      setErrorMessage('Please select the trasaction mode');\n      if(!amountToBeAdded || amountToBeAdded === 0) {\n        setErrorMessage('Please enter the amount;');\n      } else {\n        props.handleAmountAddition(amountToBeAdded, trasctionType);\n      }\n\n    }\n  }\n\n  var handleValueChange = (e) => {\n    addAmount(e.target.value);\n  }\n\n  var handleTransactionType = (e) => {\n    setTransactionType(e.target.value);\n  }\n\n  return (\n    <>\n      <div>\n        <p>Please select the Action:</p>\n        <input type=\"radio\" id=\"add\" name=\"transactionType\" value=\"add\" onChange={handleTransactionType} />\n        <label htmlFor=\"add\">Add amount </label>\n      \n        <input type=\"radio\" id=\"withdraw\" name=\"transactionType\" value=\"withdraw\" onChange={handleTransactionType} />\n        <label htmlFor=\"withdraw\">Withdraw amount </label>\n      </div>\n      <div>\n        <input type=\"number\" onChange={handleValueChange} />\n      </div>\n      <div>\n        <button onClick={handleButtonclick}> Submit </button>\n        {errorMessage}\n      </div>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}