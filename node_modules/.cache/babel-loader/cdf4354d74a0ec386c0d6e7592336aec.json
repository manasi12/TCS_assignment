{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/DebitCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AmountTransactionComponent = /*#__PURE__*/React.lazy(_c = () => import('./AmountTransaction'));\n_c2 = AmountTransactionComponent;\nexport default function DebitCard(props) {\n  _s();\n\n  const [accountInfo, setAccountInfo] = useState({});\n  const [balance, updateBalance] = useState(0);\n\n  const getAccountInfo = () => {\n    fetch('./accountDetails.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (myJson) {\n      setAccountInfo(myJson);\n      updateBalance(myJson.balance);\n    });\n  };\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  var handleAmountAddition = (amount, task) => {\n    switch (task) {\n      case 'add':\n        accountInfo.balance += parseInt(amount);\n        updateBalance(accountInfo);\n        break;\n\n      case 'withdraw':\n        accountInfo.balance -= parseInt(amount);\n        updateBalance(accountInfo);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Debit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Available Amount: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AmountTransactionComponent, {\n      handleAmountAddition: handleAmountAddition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DebitCard, \"HfgCRJulwO07mdKSgJk2r8lPM6A=\");\n\n_c3 = DebitCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AmountTransactionComponent$React.lazy\");\n$RefreshReg$(_c2, \"AmountTransactionComponent\");\n$RefreshReg$(_c3, \"DebitCard\");","map":{"version":3,"sources":["/Users/admin/Desktop/Personal-Workspace/TCS_assignment/src/components/DebitCard.js"],"names":["React","useState","useEffect","AmountTransactionComponent","lazy","DebitCard","props","accountInfo","setAccountInfo","balance","updateBalance","getAccountInfo","fetch","headers","then","response","json","myJson","handleAmountAddition","amount","task","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,0BAA0B,gBAAGH,KAAK,CAACI,IAAN,MAAW,MAAM,OAAO,qBAAP,CAAjB,CAAnC;MAAMD,0B;AAEN,eAAe,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,OAAD,EAAUC,aAAV,IAA2BT,QAAQ,CAAC,CAAD,CAAzC;;AAEA,QAAMU,cAAc,GAAG,MAAM;AAC3BC,IAAAA,KAAK,CAAC,uBAAD,EACJ;AACCC,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAU;AAFF;AADX,KADI,CAAL,CAQCC,IARD,CAQM,UAASC,QAAT,EAAkB;AACtB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAVD,EAWCF,IAXD,CAWM,UAASG,MAAT,EAAiB;AACrBT,MAAAA,cAAc,CAACS,MAAD,CAAd;AACAP,MAAAA,aAAa,CAACO,MAAM,CAACR,OAAR,CAAb;AACD,KAdD;AAeD,GAhBD;;AAiBAP,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIO,oBAAoB,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAC3C,YAAOA,IAAP;AACE,WAAK,KAAL;AACEb,QAAAA,WAAW,CAACE,OAAZ,IAAuBY,QAAQ,CAACF,MAAD,CAA/B;AACAT,QAAAA,aAAa,CAACH,WAAD,CAAb;AACA;;AACF,WAAK,UAAL;AACEA,QAAAA,WAAW,CAACE,OAAZ,IAAuBY,QAAQ,CAACF,MAAD,CAA/B;AACAT,QAAAA,aAAa,CAACH,WAAD,CAAb;AACA;AARJ;AAUD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,wCAAyBE,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAII,QAAC,0BAAD;AAA4B,MAAA,oBAAoB,EAAES;AAAlD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADF;AASD;;GA/CuBb,S;;MAAAA,S","sourcesContent":["import React, { useState, useEffect } from 'react';\nconst AmountTransactionComponent = React.lazy(() => import('./AmountTransaction'));\n\nexport default function DebitCard(props) {\n  const [accountInfo, setAccountInfo]=useState({});\n  const [balance, updateBalance] = useState(0);\n\n  const getAccountInfo = () => {\n    fetch('./accountDetails.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n    .then(function(response){\n      return response.json();\n    })\n    .then(function(myJson) {\n      setAccountInfo(myJson);\n      updateBalance(myJson.balance);\n    });\n  }\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  var handleAmountAddition = (amount, task) => {\n    switch(task) {\n      case 'add': \n        accountInfo.balance += parseInt(amount);\n        updateBalance(accountInfo);\n        break;\n      case 'withdraw': \n        accountInfo.balance -= parseInt(amount);\n        updateBalance(accountInfo);\n        break;\n    }\n  }\n\n  return (\n    <>\n      <div>Debit Card</div>\n      <div> Available Amount: {balance}</div>\n      {\n        <AmountTransactionComponent handleAmountAddition={handleAmountAddition}/>\n      }\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}